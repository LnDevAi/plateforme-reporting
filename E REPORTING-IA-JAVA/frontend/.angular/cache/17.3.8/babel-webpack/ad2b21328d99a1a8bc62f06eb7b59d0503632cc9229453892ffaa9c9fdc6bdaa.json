{"ast":null,"code":"import _asyncToGenerator from \"/workspace/E REPORTING-IA-JAVA/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.tokenKey = 'auth_token';\n      this.userKey = 'auth_user';\n    }\n    get token() {\n      return localStorage.getItem(this.tokenKey);\n    }\n    get user() {\n      const raw = localStorage.getItem(this.userKey);\n      return raw ? JSON.parse(raw) : null;\n    }\n    get isAuthenticated() {\n      return !!this.token;\n    }\n    hasRole(role) {\n      return (this.user?.roles || []).includes(role);\n    }\n    hasAnyRole(roles) {\n      return roles.some(r => this.hasRole(r));\n    }\n    login(email, password) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const res = yield fetch('/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        const data = yield res.json();\n        localStorage.setItem(_this.tokenKey, data.token);\n        localStorage.setItem(_this.userKey, JSON.stringify(data.user));\n      })();\n    }\n    logout() {\n      localStorage.removeItem(this.tokenKey);\n      localStorage.removeItem(this.userKey);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}